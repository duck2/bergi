# docker services for application bergi

version: "3"

volumes:
  staticfiles:
  elasticsearchdata:
  postgresdata:

services:
  server:
    image: bergi
    command: /bin/sh -c "
      ./docker-wait-for.sh postgres:5432 &&
      ./docker-wait-for.sh elasticsearch:9200 &&
      python manage.py runserver 0.0.0.0:8080"
    ports:
      - "${server_port-8080}:8080"
    volumes:
      - "${media_folder-../bergi-media}:/app/media"
      - staticfiles:/app/static
    deploy:
      replicas: "${server_replica_count-3}"

  build:
    image: bergi
    command: /bin/sh -c "
        ./docker-wait-for.sh postgres:5432 &&
        ./docker-wait-for.sh elasticsearch:9200 &&
        python manage.py migrate &&
        ./restore-data.sh db.zip &&
        python manage.py collectstatic --no-input"
    volumes:
      - ${media_folder-../bergi-media}:/app/media
      - staticfiles:/app/static
    deploy:
      restart_policy:
        condition: none

  postgres:
    image: postgres:11-alpine
    volumes:
      - postgresdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${postgres_user-bergi}"
      POSTGRES_DB: "${postgres_db-bergi}"

  elasticsearch:
    image: elasticsearch:5-alpine
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"